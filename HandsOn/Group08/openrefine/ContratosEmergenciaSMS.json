[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Cantidad Pedido",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Cantidad Pedido using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Cantidad Recibido",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Cantidad Recibido using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Cantidad Pendiente",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Cantidad Pendiente using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Importe del Pedido",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Importe del Pedido using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Importe Pagado",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Importe Pagado using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Importe Pendiente",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Importe Pendiente using expression value.toNumber()"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Column 12",
    "newColumnName": "VAT",
    "description": "Rename column Column 12 to VAT"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VAT",
    "expression": "grel:value.replace(\"%\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VAT using expression grel:value.replace(\"%\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "VAT",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column VAT using expression value.toNumber()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Adjudicatario",
    "expression": "grel:replace(value, \" \", \"_\")",
    "onError": "set-to-blank",
    "newColumnName": "OrganizationURI",
    "columnInsertIndex": 4,
    "description": "Create column OrganizationURI at index 4 based on column Adjudicatario using expression grel:replace(value, \" \", \"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "OrganizationURI",
    "expression": "grel:replace(value, \".\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OrganizationURI using expression grel:replace(value, \".\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "OrganizationURI",
    "expression": "grel:replace(value, \",\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OrganizationURI using expression grel:replace(value, \",\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Producto",
    "expression": "grel:value.replace(\" \",\"_\")",
    "onError": "set-to-blank",
    "newColumnName": "ProductURI",
    "columnInsertIndex": 1,
    "description": "Create column ProductURI at index 1 based on column Producto using expression grel:value.replace(\" \",\"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Fecha",
    "expression": "grel:value[6,10] + \"-\" + value[3,5] + \"-\" + value[0,2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Fecha using expression grel:value[6,10] + \"-\" + value[3,5] + \"-\" + value[0,2]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Fecha",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Fecha using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProductURI",
    "expression": "grel:value.replace(\".\",\"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProductURI using expression grel:value.replace(\".\",\"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProductURI",
    "expression": "grel:value.replace(\",\",\"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProductURI using expression grel:value.replace(\",\",\"_\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "ProductURI",
    "expression": "join ([coalesce(cells['ProductURI'].value,''),coalesce(cells['OrganizationURI'].value,''),coalesce(cells['Fecha'].value,'')],'_')",
    "onError": "keep-original",
    "newColumnName": "OrderID",
    "columnInsertIndex": 2,
    "description": "Create column OrderID at index 2 based on column ProductURI using expression join ([coalesce(cells['ProductURI'].value,''),coalesce(cells['OrganizationURI'].value,''),coalesce(cells['Fecha'].value,'')],'_')"
  },
  {
    "op": "core/blank-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "OrderID",
    "description": "Blank down cells in column OrderID"
  },
  {
    "op": "core/column-move",
    "columnName": "OrderID",
    "index": 0,
    "description": "Move column OrderID to position 0"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Cantidad Pedido",
    "expression": "grel:row.record.cells[\"Cantidad Pedido\"].value.sum()",
    "onError": "set-to-blank",
    "newColumnName": "CantidadPedido",
    "columnInsertIndex": 9,
    "description": "Create column CantidadPedido at index 9 based on column Cantidad Pedido using expression grel:row.record.cells[\"Cantidad Pedido\"].value.sum()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Cantidad Recibido",
    "expression": "grel:row.record.cells[\"Cantidad Recibido\"].value.sum()",
    "onError": "set-to-blank",
    "newColumnName": "CantidadRecibido",
    "columnInsertIndex": 11,
    "description": "Create column CantidadRecibido at index 11 based on column Cantidad Recibido using expression grel:row.record.cells[\"Cantidad Recibido\"].value.sum()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Cantidad Pendiente",
    "expression": "grel:row.record.cells[\"Cantidad Pendiente\"].value.sum()",
    "onError": "set-to-blank",
    "newColumnName": "CantidadPendiente",
    "columnInsertIndex": 13,
    "description": "Create column CantidadPendiente at index 13 based on column Cantidad Pendiente using expression grel:row.record.cells[\"Cantidad Pendiente\"].value.sum()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Importe del Pedido",
    "expression": "grel:row.record.cells[\"Importe del Pedido\"].value.sum()",
    "onError": "set-to-blank",
    "newColumnName": "ImportePedido",
    "columnInsertIndex": 15,
    "description": "Create column ImportePedido at index 15 based on column Importe del Pedido using expression grel:row.record.cells[\"Importe del Pedido\"].value.sum()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Importe Pagado",
    "expression": "grel:row.record.cells[\"Importe Pagado\"].value.sum()",
    "onError": "set-to-blank",
    "newColumnName": "ImportePagado",
    "columnInsertIndex": 17,
    "description": "Create column ImportePagado at index 17 based on column Importe Pagado using expression grel:row.record.cells[\"Importe Pagado\"].value.sum()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Importe Pendiente",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "ImportePendiente",
    "columnInsertIndex": 19,
    "description": "Create column ImportePendiente at index 19 based on column Importe Pendiente using expression grel:value"
  },
  {
    "op": "core/column-removal",
    "columnName": "Cantidad Pedido",
    "description": "Remove column Cantidad Pedido"
  },
  {
    "op": "core/column-removal",
    "columnName": "Cantidad Recibido",
    "description": "Remove column Cantidad Recibido"
  },
  {
    "op": "core/column-removal",
    "columnName": "Cantidad Pendiente",
    "description": "Remove column Cantidad Pendiente"
  },
  {
    "op": "core/column-removal",
    "columnName": "Importe del Pedido",
    "description": "Remove column Importe del Pedido"
  },
  {
    "op": "core/column-removal",
    "columnName": "Importe Pagado",
    "description": "Remove column Importe Pagado"
  },
  {
    "op": "core/column-removal",
    "columnName": "Importe Pendiente",
    "description": "Remove column Importe Pendiente"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "VAT",
    "expression": "grel:row.record.cells[\"VAT\"].value.uniques().get(row.record.cells[\"VAT\"].value.uniques().length()-1)",
    "onError": "set-to-blank",
    "newColumnName": "totalVAT",
    "columnInsertIndex": 15,
    "description": "Create column totalVAT at index 15 based on column VAT using expression grel:row.record.cells[\"VAT\"].value.uniques().get(row.record.cells[\"VAT\"].value.uniques().length()-1)"
  },
  {
    "op": "core/column-removal",
    "columnName": "VAT",
    "description": "Remove column VAT"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "OrderID",
          "expression": "isBlank(value)",
          "columnName": "OrderID",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Tipo",
    "expression": "grel:if(value==\"SERVICIO\", \"Service\", \"Product\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Tipo using expression grel:if(value==\"SERVICIO\", \"Service\", \"Product\")"
  }
]