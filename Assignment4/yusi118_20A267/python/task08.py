# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JWNL8jz7e1cIy-20XOKKbc0gucKn3FyP

**Task 08: Completing missing data**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"resources/data01.rdf", format="xml")
g2.parse(github_storage+"resources/data02.rdf", format="xml")

print(" *************** data 01 ************************")
for s1,p1,o1 in g1:
  print(s1,p1,o1)

print(" *************** data 02 ************************")
for s2,p2,o2 in g2:
  print(s2,p2,o2)

"""Task: list all the elements of the class Person in the first graph (data01.rdf) and complete the fields (given name, family name and email) that may be missing with the data from the second graph (data02.rdf). You can use SPARQL queries or iterate the graph, or both."""
from rdflib.plugins.sparql import prepareQuery
from rdflib.namespace import RDF, RDFS
ns=Namespace("http://data.org#")
vcard=Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

q1 = prepareQuery('''
   SELECT 
     DISTINCT ?ind1 
   WHERE { 
      ?ind1 rdf:type  ns:Person.
    }ORDER BY  (?x)
    ''', initNs = { "ns": ns,"rdf":RDF}
)

datos={1:vcard.EMAIL,2:vcard.Given,3:vcard.Family}

for r in g1.query(q1):
  for key in datos:
    if (r.ind1,datos[key],None) in g1:
      for s,p,o in g1.triples((r.ind1,datos[key],None)):
        print(s,p,o)
    else:
      for s,p,o in g2.triples((r.ind1,datos[key],None)):
        print(s,p,o)
